variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE

stages:
    - lint
    - test
    - build
    - deploy

.node_template: &node_template
    image: $NODE
    before_script:
        - corepack enable
        - pnpm config set store-dir .pnpm-store
        - pnpm install
    cache:
        key:
            files:
                - pnpm-lock.yaml
        paths:
            - .pnpm-store

lint:
    <<: *node_template
    stage: lint
    script:
        - pnpm run lint

test:
    <<: *node_template
    stage: test
    script:
        - pnpm run test

sast:
    stage: test

build:
    stage: build
    image: $DOCKER
    services:
        - docker:25-dind
    variables:
        DOCKER_HOST: tcp://thedockerhost:2375/
        DOCKER_DRIVER: overlay2
        DOCKER_TLS_CERTDIR: ""
    before_script:
        - export IMAGE_VERSION=$(cat app/package.json | jq -r .version)
        - export IMAGE_TAG=$IMAGE_VERSION.$CI_PIPELINE_IID
        - echo "IMAGE_TAG:$IMAGE_TAG" > build.env
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -t $IMAGE_NAME:$IMAGE_TAG .
        - docker push $IMAGE_NAME:$IMAGE_TAG
    artifacts:
        reports:
            dotenv: build.env
    rules:
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "development" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^release-.*/)'

deploy:
    stage: deploy
    image: kroniak/ssh-client
    needs:
        - build
    variables:
        SSH_OPTIONS: "-o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY"
        REMOTE_DIR: "/home/$SSH_USER"
        DOCKER_COMPOSE_CMD: "docker-compose -f $REMOTE_DIR/docker-compose.yml"
    before_script:
        - chmod 400 $SSH_PRIVATE_KEY
    script:
        - scp $SSH_OPTIONS ./docker-compose.yml $SSH_USER@$IPADDRESS:$REMOTE_DIR
        - >
            ssh $SSH_OPTIONS $SSH_USER@$IPADDRESS "
            docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY &&
            export COMPOSE_PROJECT_NAME=autoMtce &&
            export DC_IMAGE_NAME=$IMAGE_NAME &&
            export DC_IMAGE_TAG=$IMAGE_TAG &&
            export MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME &&
            export MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD &&
            docker network create autoMtce || true &&
            $DOCKER_COMPOSE_CMD down &&
            $DOCKER_COMPOSE_CMD up -d"
    rules:
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "development"'

include:
    - template: Jobs/SAST.gitlab-ci.yml
